name: Android APK CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SKIP_JDK_VERSION_CHECK: true
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
  JAVA_OPTS: "-XX:+UseParallelGC -Xmx2g -Xms512m"

jobs:
  build:
    name: Build Universal APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          cache: true
          
      - name: Check Flutter version
        run: flutter --version

      - name: Cache Pub Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up Android SDK & accept licenses
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: '33.0.2'
          cmake: '3.22.1'
          ndk: '23.1.7779620'
      
      - name: Fix Gradle settings issue
        run: |
          if [ -f "android/settings.gradle" ] && [ -f "android/settings.gradle.kts" ]; then
            echo "Both settings.gradle and settings.gradle.kts exist, removing settings.gradle.kts"
            rm android/settings.gradle.kts
          fi

      - name: Update AGP version in settings.gradle.kts
        run: |
          if [ -f "android/settings.gradle.kts" ]; then
            sed -i 's/id("com.android.application") version "8.7.0" apply false/id("com.android.application") version "8.3.0" apply false/g' android/settings.gradle.kts
            echo "Updated AGP version to 8.3.0"
            cat android/settings.gradle.kts
          fi
      
      - name: Flutter clean
        run: flutter clean

      - name: Flutter pub get
        run: flutter pub get

      - name: Generate App Icon
        run: flutter pub run flutter_launcher_icons:main

      - name: Update plugins
        run: |
          flutter pub remove connectivity_plus
          flutter pub add connectivity_plus:^6.1.4
          flutter pub get

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Build APK (Universal)
        run: flutter build apk --release --android-skip-build-dependency-validation
        continue-on-error: false

      - name: Check APK output
        run: |
          echo "Checking APK outputs directory..."
          find build/app/outputs -type f -name "*.apk"
          
          if [ -d "build/app/outputs/flutter-apk" ]; then
            echo "APK build successful"
            cd build/app/outputs/flutter-apk && zip riyales-universal.zip *.apk
          else
            echo "APK build failed - directory not found"
            exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: riyales-apk
          path: build/app/outputs/flutter-apk/riyales-universal.zip

      - name: Build Web App
        run: flutter build web --release
        continue-on-error: true

      - name: Check Web Output
        run: |
          if [ -d "build/web" ]; then
            echo "Web build successful"
            cd build/web && zip -r riyales-web.zip .
          else
            echo "Web build failed - directory not found"
            mkdir -p build/web
            echo "Build failed" > build/web/failed.html
            cd build/web && zip -r riyales-web.zip .
          fi

      - name: Upload Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: riyales-web
          path: build/web/riyales-web.zip

  deploy-web:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: riyales-web
          path: web-build
      
      - name: Unzip web build
        run: |
          mkdir -p web-content
          cd web-build
          unzip riyales-web.zip -d ../web-content
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'web-content'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  release:
    name: Publish Release Assets
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: riyales-apk
          path: artifacts/apk
      - uses: actions/download-artifact@v4
        with:
          name: riyales-web
          path: artifacts/web
      - id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          files: |
            artifacts/apk/riyales-universal.zip
            artifacts/web/riyales-web.zip
 
