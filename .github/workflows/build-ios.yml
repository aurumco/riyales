name: Release iOS

on:
  workflow_dispatch:
    inputs:
      upgrade_flutter:
        description: 'Upgrade Flutter to the latest stable version (true/false)'
        required: false
        default: 'false'

env:
  FLUTTER_VERSION: '3.32.6'
  XCODE_VERSION: '16.2'

jobs:
  build:
    name: Build iOS IPA
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Check Flutter version
        run: flutter --version

      - name: Check Dart version
        run: dart --version

      - name: Upgrade Flutter (optional)
        if: github.event.inputs.upgrade_flutter == 'true'
        run: flutter upgrade --force

      - name: Extract version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          echo "Extracted version: $VERSION"
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Cache Pub Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}-flutter-${{ github.event.inputs.upgrade_flutter == 'true' && 'upgraded' || env.FLUTTER_VERSION }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - name: Install dependencies
        run: flutter pub get

      - name: Generate App Icon
        run: flutter pub run flutter_launcher_icons:main

      - name: Build iOS app
        run: flutter build ios --release --no-codesign

      - name: Create exportOptions.plist
        run: |
          cat > exportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
          </dict>
          </plist>
          EOF

      - name: Build IPA
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath $PWD/build/Runner.xcarchive
          xcodebuild -exportArchive -archivePath $PWD/build/Runner.xcarchive -exportOptionsPlist ../exportOptions.plist -exportPath $PWD/build/Runner.ipa

      - name: Rename IPA
        run: |
          mv ios/build/Runner.ipa/Runner.ipa ios/build/Runner.ipa/riyales-${{ env.APP_VERSION }}.ipa

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: riyales-ipa
          path: ios/build/Runner.ipa/riyales-${{ env.APP_VERSION }}.ipa
