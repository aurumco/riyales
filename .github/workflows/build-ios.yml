name: Release iOS

permissions:
  contents: write
  packages: write

on:
  workflow_dispatch:
    inputs:
      upgrade_flutter:
        description: 'Upgrade Flutter to the latest stable version (true/false)'
        required: false
        default: 'false'

env:
  FLUTTER_VERSION: '3.32.6'
  DART_VERSION: '3.8.1'
  BUNDLE_ID: 'ir.ryls'

jobs:
  build:
    name: Build iOS IPA
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Dart SDK
        uses: actions/cache@v4
        with:
          path: ${{ runner.tool_cache }}/dart-sdk
          key: ${{ runner.os }}-dart-${{ env.DART_VERSION }}
          restore-keys: |
            ${{ runner.os }}-dart-

      - name: Cache Flutter SDK
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}-${{ env.FLUTTER_VERSION }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}-
            ${{ runner.os }}-flutter-

      - name: Set up Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ env.DART_VERSION }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Upgrade Flutter (optional)
        if: github.event.inputs.upgrade_flutter == 'true'
        run: flutter upgrade --force

      - name: Check Flutter and Dart versions
        run: |
          flutter --version
          dart --version

      - name: Cache Dart dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-dart-deps-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-dart-deps-

      - name: Install dependencies
        run: flutter pub get

      - name: Generate App Icon
        run: flutter pub run flutter_launcher_icons:main

      - name: Update iOS bundle identifier
        run: |
          echo "Setting iOS bundle ID to ${{ env.BUNDLE_ID }}"
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier ${{ env.BUNDLE_ID }}" ios/Runner/Info.plist
          sed -i '' 's/PRODUCT_BUNDLE_IDENTIFIER = .*;/PRODUCT_BUNDLE_IDENTIFIER = ${{ env.BUNDLE_ID }};/g' ios/Runner.xcodeproj/project.pbxproj

      - name: Build iOS IPA (unsigned)
        run: |
          # Build iOS without code signing
          flutter build ios --release --no-codesign
          
          # Create IPA manually from the .app bundle
          mkdir -p build/ios/ipa
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ../ipa/riyales.ipa Payload/
          cd ../../..
          
          # Verify IPA was created
          ls -la build/ios/ipa/

      - name: Extract version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          echo "Extracted version: $VERSION"
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Attach IPA to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.APP_VERSION }}
          files: build/ios/ipa/riyales.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
